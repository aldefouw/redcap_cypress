version: 2.0

jobs:
  run-tests:
    machine:
      image: ubuntu-2204:2024.01.2 # Machine image updates: https://circleci.com/developer/machine/image/ubuntu-2204
      resource_class: large
    parallelism: 1
    steps:
      - checkout
      - run:
          name: Install MySQL Client
          command: |
            sudo apt-get update
            sudo apt-get install mysql-client-core-8.0
      - run:
          name: Build the REDCap Image
          command: |
            git clone --branch xdebug https://github.com/aldefouw/redcap_docker
      - run:
          name: Get REDCap Source
          command: |
            git clone --branch redcap-cypress https://github.com/aldefouw/redcap_source
      - run:
          name: Start Docker REDCap Container
          command: |
            cd /home/circleci/project/redcap_docker
            docker-compose up -d
      - run:
          name: Install composer dependencies
          command: |
            docker exec -it redcap_docker-app-1 sh -c "cd /var/www/html/redcap_v13.1.37 && COMPOSER_DISABLE_XDEBUG_WARN=1 composer install"
      - run:
          name: Reload REDCap
          command: |
            cd /home/circleci/project/redcap_docker
            docker-compose down && docker-compose up -d
      - run:
          name: Permissions on coverage files
          command: |
            docker exec -it redcap_docker-app-1 sh -c "chmod 777 /tmp/path/coverage"
      - run:
          name: Change eDocs & Temp folder permissions
          command: |
            sudo chmod 777 /home/circleci/project/edocs
            sudo chmod 777 /home/circleci/project/tmp
      - run:
          name: Configure Cypress environment
          command: |
            cd /home/circleci/project
            sed s/PID/$PROJECT_ID/g cypress.config.js.example > cypress.config.js
            mv cypress.env.json.example cypress.env.json

      - run:
          name: Install Cypress
          command: |
            export NVM_DIR="/opt/circleci/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm use stable
            npm run redcap_rsvc:install
      - run:
          name: Run Tests
          command: |
            npx cypress run --spec "redcap_rsvc/Feature Tests/B/Export Data/B.5.21.300 - Export All Fields.feature" --record --key $RECORD_KEY --group core-tests --browser chrome
            # npx cypress run --spec "redcap_rsvc/Feature Tests/B/Assign User Rights/*.feature" --record --key $RECORD_KEY --parallel --group core-tests --browser chrome
            # npx cypress run --record --key $RECORD_KEY --parallel --group core-tests --browser chrome
      - run:
          name: Coverage Report
          command: |
            docker exec -i redcap_docker-app-1 php /var/www/html/phpcov.phar merge --xml /tmp/path/coverage-report/merged-coverage-${CIRCLE_NODE_INDEX}.xml /tmp/path/coverage
      - run:
          name: Debug Workspace Contents
          command: ls -l /home/circleci/project/coverage-report/
      - persist_to_workspace:
          root: .
          paths:
            - coverage-report
          
  combine-reports:
    docker:
      - image: d0x2f/clover-merge:latest
    steps:
      - checkout
      - attach_workspace:
          at: /home/circleci/project/
      - run: 
          name: Clover Merge
          command: |
            clover-merge -o /home/circleci/project/coverage-report/merged-clover.xml $(ls /home/circleci/project/coverage-report/*.xml)
      - store_artifacts:
          path: /home/circleci/project/coverage-report
  
  # combine-reports:
  #   docker:
  #     - image: cimg/php:7.4.33-node
  #   steps:
  #     - checkout
  #     - attach_workspace:
  #         at: /home/circleci/project/
  #     - run: 
  #         name: Clover Merge
  #         command: |
  #           git clone https://github.com/d0x2f/CloverMerge.git
  #           cd CloverMerge
  #           composer install --ignore-platform-reqs
  #           ./clover-merge -o /home/circleci/project/coverage-report/merged-clover.xml $(ls /home/circleci/project/coverage-report/*.xml)
  #     - store_artifacts:
  #         path: /home/circleci/project/coverage-report

          
      # - run:
      #     name: Install PHPUnit
      #     command: composer require --dev phpunit/phpunit
      # - run:
      #     name: Install PHPCov
      #     command: |
      #       wget https://phar.phpunit.de/phpcov.phar
      #       php phpcov.phar --version
      #       pwd
      #       ls -l /home/circleci/project/coverage-report/
      # - run:
      #     name: Merge Clover XML reports
      #     command: |
      #       php phpcov.phar merge --clover /tmp/merged-clover.xml $(ls /home/circleci/project/coverage-report/*.xml)



    # docker:
    #   - image: node:14
    # steps:
    #   - attach_workspace:
    #       at: /home/circleci/project/coverage-report/
    #   - run:
    #       name: Merge Clover XML reports
    #       command: |
    #         ls -la /home/circleci/project/coverage-report
    #         npm install -g clover-merge
    #         cd /home/circleci/project/coverage-report
    #         clover-merge merged-coverage-*.xml merged-coverage.xml
    #   - store_artifacts:
    #       path: /home/circleci/project/coverage-report

workflows:
  version: 2
  workflow:
    jobs:
      - run-tests:
          context: REDCap Tests
      - combine-reports:
          context: Combine Reports
          requires:
            - run-tests
